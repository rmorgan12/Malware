from numpy import zeros, linspace
import numpy as np 
import matplotlib.pyplot as plt
import math 


n_steps = 900
dt = 1/30
beta0 = .8
mu = 0
sigma = .9
epsilon = .46
delta = .6
Lambda = .6
tau = 5

total_pop = 33
S = zeros(n_steps+1)
L = zeros(n_steps+1)
B = zeros(n_steps+1)
Q = zeros(n_steps+1)
R = zeros(n_steps+1)
N = zeros(n_steps+1)
t = np.zeros(n_steps+1)

    #Initial conditions
t[0] = 0.0
S[0] = 30
L[0] = 2
B[0] = 1
Q[0] = 0
R[0] = 0
N[0] = total_pop

    #Eulers
for i in range(n_steps):

    sdt = (-beta0*S[i]*(L[i] + B[i]) - mu*S[i] + mu*total_pop + epsilon*L[i-(tau*30)]*math.exp(-mu*(tau*30)) + Lambda*Q[i-(tau*30)]*math.exp(-mu*(tau*30)))*dt
    ldt = (beta0*S[i]*(L[i] + B[i]) - mu*L[i] - sigma*L[i] - epsilon*L[i]) * dt
    bdt = (sigma*L[i] - delta*B[i] - mu*B[i]) * dt
    qdt = (delta*B[i] - mu*Q[i] - Lambda*Q[i]) * dt
    rdt = (epsilon*L[i] + Lambda*Q[i] - mu*R[i] - epsilon*L[i-(tau*30)]*math.exp(-mu*(tau*30)) - Lambda*Q[i-(tau*30)]*math.exp(-mu*(tau*30))) * dt

    S[i+1] = S[i] + sdt
    L[i+1] = L[i] + ldt
    B[i+1] = B[i] + bdt
    Q[i+1] = Q[i] + qdt
    R[i+1] = R[i] + rdt
    t[i+1] = t[i] + dt
    N[i+1] = S[i] + L[i] + B[i] + Q[i] + R[i]

plt.plot(t,S, label='S(t)',color='b')
plt.plot(t,L, label='L(t)',color='g')
plt.plot(t,B, label='B(t)',color='orange')
plt.plot(t,R, label='R(t)',color='purple')
plt.xlabel('Time')
plt.ylabel('Population')
plt.legend()
plt.show()

