# Imports
from numpy import zeros, linspace
import numpy as np
import matplotlib.pyplot as plt
import math

# --------------------------------------------------------------------------------------
# Parameters/Variables
b = .8  # MALWARE INITAL POPOGATION RATE
e = 1
y = .5  # infected
ol = .46  # vaccination rate
w = .05  # loss of immunity
o = .6  # quarantined
g = .2
r = 5

# --------------------------------------------------------------------------------------
# Define the time vector
t_max = 30
dt = 1/30

# --------------------------------------------------------------------------------------
# Susceptible (S), infected (I), quarantined (Q), vaccinated (V), and delay hosts (D)
t = np.arange(0, t_max, dt)
S = zeros(len(t))
I = zeros(len(t))
Q = zeros(len(t))
V = zeros(len(t))
D = zeros(len(t))

# --------------------------------------------------------------------------------------
# Initial conditions
S[0] = 30
I[0] = 3
Q[0] = 0
V[0] = 0
D[0] = 0

# --------------------------------------------------------------------------------------
# Eulers
for i in range(1, len(t)):

    bf = b/(1+e*I[i-1])
    sdt = -bf*I[i-1]*S[i-1]-ol*S[i-1]+w*V[((i-1)-r*30)]
    idt = bf*I[i-1]*S[-1]-(y+g)*I[i-1]
    qdt = g*I[i-1]-o*Q[i-1]
    vdt = ol*S[i-1]+y*I[i-1]+o*Q[i-1]-w*V[i-1]
    dvt = w*V[i-1]-w*V[((i-1)-5*33)]

    S[i] = S[i-1] + sdt
    I[i] = I[i-1] + idt
    Q[i] = Q[i-1] + qdt
    V[i] = V[i-1] + vdt
    D[i] = D[i-1] + dvt

# --------------------------------------------------------------------------------------
# Plotting
# fig = plt.figure()
# l1 = plt.plot(t, S, I, Q, V, D, t)
# plt.show()


# Plot the results
fig, ax = plt.subplots()
ax.plot(t, S, label='S')
ax.plot(t, I, label='I')
ax.plot(t, V, label='V')
ax.set_xlabel('Time (days)')
ax.set_ylabel('Number of individuals')
plt.show()
