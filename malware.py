from numpy import zeros, linspace
import numpy as np 
import matplotlib.pyplot as plt
import math 


# beta0_vals = np.linspace(0,1,21)
# o_vals = np.linspace(0, 1, 21)
# Q_vals = np.linspace(0, 1, 21)
# a_vals = np.linspace(0, 1, 21)
# P_vals = np.linspace(0, 1, 21)
# mu_vals = np.linspace(0, 1, 21)

# num_sims = 10


beta0 = .2    #MALWARE INITAL POPOGATION RATE 
F = 1         #PARAMETER FOR INFECTION RATE (6)
mu = .1       #MACHINE UNAVAIBILITY RATE CAUSED BY OTHER
alpha = .2    #MACHINE UNAVAIBILITY RATE CAUSED BY MALWARE
c = 5         #PARAMETER FOR RECOVERED RATE (7) 
o = .9        #MALWARE EXECUTION RATE  
Q = .46       #IMMUNIZATION RATE  
P = .1        #BIRTH SUSCEPTIBILITY RATE  
A = 1         #NUMBER OF NEW NODES
a = .1        #PARAMETER TO CONTROL STRENGTH
m = 1         #PARAMETER TO CONTROL TIME

total_pop = 33
t = np.arange(0, 35, 1/35)
S = zeros(len(t))
E = zeros(len(t))
I = zeros(len(t))
R = zeros(len(t))
N = zeros(len(t))



# for sim in range(num_sims):
#     beta0 = np.random.choice(beta0_vals)
#     o = np.random.choice(o_vals)
#     Q = np.random.choice(Q_vals)
#     a = np.random.choice(a_vals)
#     P = np.random.choice(P_vals)
#     mu = np.random.choice(mu_vals)

    #Initial conditions
S[0] = 30
E[0] = 2
I[0] = 1
R[0] = 0
N[0] = total_pop

    #Eulers
for i in range(1, len(t)):

    BETAFUNCTION = beta0/(1+F*I[i-1])                           #INFECTION RATE
    WFUNCTION = abs(math.exp(-a*t[i]) * math.cos((2*math.pi*t[i])/m)) #LOSS OF IMMUNITY RATE
    YFUNCTION = math.tanh(I[i-1] / c)                           #RECOVERY RATE

    sdt = (P * A - BETAFUNCTION * I[i-1] * S[i-1] + WFUNCTION * R[i-1] - (mu + Q) * S[i-1])
    edt = (BETAFUNCTION * I[i-1] * S[i-1] - o * E[i-1] - mu * E[i-1])
    idt = (o * E[i-1] - YFUNCTION * I[i-1] - (mu + a) * I[i-1])
    rdt = ((1 - P) * A + YFUNCTION * I[i-1] - WFUNCTION * R[i-1] - mu * R[i-1] + Q * S[i-1])

    S[i] = S[i-1] + sdt
    E[i] = E[i-1] + edt
    I[i] = I[i-1] + idt
    R[i] = R[i-1] + rdt
    N[i] = S[i] + E[i] + I[i] + R[i]

fig = plt.figure()
l1 = plt.plot(t, S, t, E, t, I, t, R,)
# l2 = plt.plot(t, E, color='orange')
# l3 = plt.plot(t, I, color='green')
# l4 = plt.plot(t, R, color='red')
# fig.legend((l1,l2,l3,l4), ('S','E','I','R'), 'upper left')

plt.show()